name: Build Electron Application
author: 'MiLaboratories'
description: |
  Do clean install of node dependencies (using cache),
  build the application for given OS and publish artifact.

inputs:
  node_version:
    description: 'Node version to use'
    required: true
  app_name_slug:
    description: 'Application name slug (affects release file name)'
    required: true

  npm_build_script:
    description: 'Name of script for application build (npm run <script>)'
    required: false
    default: 'electron:build'

  app_version:
    description: 'Force application version to given value before building'
    required: false
    default: ''
  package_json:
    description: |
      Path to 'package.json' file that should be used for version patching.
      By default, 'package.json' at repository root is used as target.

    required: false
    default: 'package.json'

  cache_version:
    description: |
      Simple hack, that allows to 'reset' cache for particular job.

      Just change the value of this parameter and the next run will
      not find build cache and will have to start from scratch.

    required: false
    default: 'v1'

runs:
  using: "composite"

  steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ inputs.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'npm'

    - name: Cache electron libs
      uses: milaboratory/github-ci/actions/node/electron/cache@v1
      with:
        local_cache: 'on'

    - name: Install node packages with npm
      run: npm install
      shell: bash

    - name: Patch package version
      uses: milaboratory/github-ci/actions/node/patch-version@v1
      with:
        version: ${{ inputs.app_version }}

    - run: npm run ${{ inputs.npm_build_script }}
      shell: bash

    - name: Save artifact with Mac OS X application
      uses: actions/upload-artifact@v2
      if: runner.os == 'macOS'
      with:
        name: ${{ inputs.app_name_slug }}-mac
        path: dist_electron/*.dmg

    - name: Save artifact with Linux application
      uses: actions/upload-artifact@v2
      if: runner.os == 'Linux'
      with:
        name: ${{ inputs.app_name_slug }}-linux
        path: dist_electron/*.AppImage
