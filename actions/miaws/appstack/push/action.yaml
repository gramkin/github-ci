name: Publish docker image to AWS Docker registry
author: 'MiLaboratories'
description: |
  Publish given docker tag into AWS Docker registry using our
  custom 'miaws' utility

inputs:
  source:
    description: |
      Source tag to push, including version part: <tag-name>:<tag-version>
      E.g.:
        myapp:v0.1.0
    required: true

  target:
    description: |
      Push target tags without registry name.
      Defaults to {{inputs.source}}

    required: false
    default: ''

  regions:
    description: |
      List of regions to push to.

      Image will be pushed to docker repositories in given regions.

      You can specify several regions, one per line.
    required: false

  regions-by-task:
    description: |
      Task to use for regions detection.

      Image will be pushed to docker repositories in regions that have
      given task.

      You can specify several tasks, one per line.
    required: false

  deployment-units:
    description: |
      Deployment units to use for regions detection.

      Image will be pushed to docker repositories in regions that
      have given deployment unit.

      You can specify several units, one per line.
    required: false

outputs:
  pushed:
    description: |
      Pushed tag name.
    value: ${{ steps.target.outputs.stdout }}

  pushed-json:
    description: |
      List of pushed tags as JSON string.
      Use 'fromJSON()' to decode.
    value: |
      [ "${{ steps.target.outputs.stdout }}" ]

runs:
  using: "composite"

  steps:
    - name: Get target tag name
      id: target
      uses: milaboratory/github-ci/actions/shell@v2
      env:
        SOURCE_TAG: ${{ inputs.source }}
        TARGET_TAG: ${{ inputs.target }}
      with:
        run: |
          # Default target tag to {{ source }} when empty

          if [ -z "${TARGET_TAG}" ]; then
            TARGET_TAG="${SOURCE_TAG}"
          fi

          echo "${TARGET_TAG}"

    - uses: milaboratory/github-ci/actions/miaws/appstack/login@v2
    - id: push
      uses: milaboratory/github-ci/actions/miaws@v2
      with:
        regions: ${{ inputs.regions }}
        regions-by-tasks: ${{ inputs.regions-by-task }}
        deployment-units: ${{ inputs.deployment-units }}
        args: |-
          appstack
          push
          ${{ inputs.source }}
          ${{ steps.target.outputs.stdout }}
