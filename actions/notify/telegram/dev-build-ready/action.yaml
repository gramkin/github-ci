name: Telegram Message
description: |
  Notify User or Channel about successful dev build

inputs:
  telegram-target:
    description: |
      Target telegram User or Channel ID
    required: true
  telegram-token:
    description: |
      Telegram Bot token
    required: true

  product-name:
    description: |
      Name of product that was built
    required: false
    default: ${{ github.repository }}
  build-version:
    description: |
      Build version to display in message
    required: true
  build-category:
    description: |
      Build category: 'dev', 'nigtly', 'whatever' :)
    required: false
    default: 'dev'

  docker-images:
    description: |
      List of docker images related to build in JSON format
    required: false
    default: '[]'

  additional-info:
    description: |
      Additional text to append to message
    required: false
    default: ''

runs:
  using: "composite"

  steps:
    - uses: milaboratory/github-ci/actions/templates/jinja@v1
      id: message
      with:
        data: |
          { "docker_images": ${{ inputs.docker-images }} }

        template: |
          ðŸš§ \[${{ inputs.product-name }}] New ${{ inputs.build-category }} build is ready: ${{ inputs.build-version }}

          Branch: ${{ github.ref_name }}
          Commit: ${{ github.sha }}

          - [View Build on GitHub](${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}})
          - [Source code on GitHub](${{github.server_url}}/${{github.repository}}/tree/${{github.sha}})

          {%- if docker_images | length > 0 %}
          {% for i in docker_images %}
          - {{ i }}
          {% endfor %}
          {% endif %}

          ${{ inputs.additional-info }}

    - uses: milaboratory/github-ci/actions/notify/telegram/send@v1-beta
      with:
        to: ${{ inputs.telegram-target }}
        token: ${{ inputs.telegram-token }}
        format: markdown
        disable_web_page_preview: true
        message: ${{ steps.message.outputs.data }}
