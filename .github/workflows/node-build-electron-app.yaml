# This workflow will do a clean prepare of node dependencies,
# cache/restore them, build the source code and run tests across different OS

name: Build Electron Application

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node version to use'
        type: string
        required: true
      os:
        description: 'OS to build for'
        type: string
        required: true
      app-name-slug:
        description: 'Application name slug (affects release file name)'
        type: string
        required: true
      npm-build-script:
        description: 'Name of script for application build'
        type: string
        required: false
        default: 'electron:build'

jobs:
  detect-version:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - id: version-detector
        uses: milaboratory/github-ci/actions/autodetect-version@v1

    outputs:
      version: ${{ steps.version-detector.outputs.version }}

  build:

    runs-on: ${{ inputs.os }}

    needs:
      - detect-version

    steps:
      - uses: actions/checkout@v2

      - name: Prepare env for Node application build
        uses: milaboratory/github-ci/actions/node/prepare@v1
        with:
          node-version: ${{ inputs.node-version }}
          cache-version: 'v1'

      - name: Patch package version
        uses: milaboratory/github-ci/actions/node/patch-version@v1
        with:
          version: ${{ needs.detect-version.outputs.version }}

      - name: Build application
        run: npm run ${{ inputs.npm-build-script }}
        shell: bash

      - name: Save artifact with Mac OS X application
        uses: actions/upload-artifact@v2
        if: runner.os == 'macOS'
        with:
          name: ${{ inputs.app-name-slug }}-mac
          path: dist_electron/*.dmg

      - name: Save artifact with Linux application
        uses: actions/upload-artifact@v2
        if: runner.os == 'Linux'
        with:
          name: ${{ inputs.app-name-slug }}-linux
          path: dist_electron/*.AppImage
