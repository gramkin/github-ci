# This workflow will do a clean prepare of node dependencies,
# cache/restore them, build the source code and run tests across different OS

name: Build Electron Application

on:
  workflow_call:
    inputs:
      #
      # Version detection control
      #
      version-tag-exact-match:
        description: |
          Use '--exact-match' option when running 'git describe' to obtain
          application version number from git tag
        type: boolean
        required: false
        default: true
      version-canonize:
        description: |
          Canonize version number to make it look like regular semver: <major>.<minor>.<bugfix>
        type: boolean
        required: false
        default: false

      #
      # Environment control
      #
      node-version:
        description: 'Node version to use'
        type: string
        required: true
      os:
        description: 'OS to build for'
        type: string
        required: true
      app-name-slug:
        description: 'Application name slug (affects release file name)'
        type: string
        required: true

      #
      # Build control
      #
      build-script-name:
        description: 'Name of script for application build'
        type: string
        required: false
        default: 'electron:build'
      vue-project:
        description: "This is vue-based project. Use 'vue-cli' toolkit"
        type: boolean
        required: false
        default: true

jobs:
  detect-version:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - id: version-detector
        uses: milaboratory/github-ci/actions/autodetect-version@v1
        with:
          exact-match: ${{ inputs.version-tag-exact-match }}
          canonize: 'true'

    outputs:
      version: ${{ steps.version-detector.outputs.version }}

  build:

    runs-on: ${{ inputs.os }}

    needs:
      - detect-version

    steps:
      - uses: actions/checkout@v2

      - name: Prepare env for Node application build
        uses: milaboratory/github-ci/actions/node/prepare@v1
        with:
          node-version: ${{ inputs.node-version }}
          cache-version: 'v1'

      - name: Install node packages with npm
        run: npm install
        shell: bash

      - name: Patch package version
        uses: milaboratory/github-ci/actions/node/patch-version@v1
        with:
          version: ${{ needs.detect-version.outputs.version }}

      - name: Build application
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.github_token }}
          use_vue_cli: ${{ inputs.vue-project }}
          build_script_name: ${{ inputs.build-script-name }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}

#      - name: Save artifact with Mac OS X application
#        uses: actions/upload-artifact@v2
#        if: runner.os == 'macOS'
#        with:
#          name: ${{ inputs.app-name-slug }}-mac
#          path: dist_electron/*.dmg
#
#      - name: Save artifact with Linux application
#        uses: actions/upload-artifact@v2
#        if: runner.os == 'Linux'
#        with:
#          name: ${{ inputs.app-name-slug }}-linux
#          path: dist_electron/*.AppImage
